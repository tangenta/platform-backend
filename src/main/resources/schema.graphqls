
type Query {
    users: [User!]!
    posts: [Post!]!
#    questions(class: QuestionClassification, number: Int!): [Question!]!
}

type Mutation {
    login(username: String!, password: String!): LoginResult!
    logout(sutdentId: Int!): Boolean!
    register(username: String!, password: String!, email: String!): RegisterResult

    # TODO: implement
#    createQuestion(): Question!
#    createPost(): Post!

#    handInAnswers(answers: [Answer!]!)
#    postComment()
#    postPost()
#    deletePost()
}

schema {
    query: Query
    mutation: Mutation
}

type ErrorContainer {
    messages: [String!]!
}

type LoginPayload {
    user: User!
    token: String!
}

type RegisterPayload {
    token: String!
}

union LoginResult = LoginPayload | ErrorContainer
union RegisterResult = RegisterPayload | ErrorContainer